#!/usr/bin/env python3

# Copyright (c) 2017 Danny van Dyk
#
# This file is part of the pun project. pun is free software;
# you can redistribute it and/or modify it under the terms of the GNU General
# Public License version 2, as published by the Free Software Foundation.
#
# pun is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA  02111-1307  USA

from pundata import *
from shutil import copy2

def main():
    parser = argparse.ArgumentParser(description='Prepare a directoy to be used as an $pun_HOME directory')
    parser.add_argument('punhome', metavar='punHOME', type=str, help='Name of the directy that shall be prepared.')
    parser.add_argument('--pundir', type=str, help='Root directory of the pun installation. Defaults to /usr', default='/usr')

    args = parser.parse_args()

    # ensure that the pun installation directory exists and is not empty
    print(os.path.join(args.pundir, 'share/pun/parameters'))
    if not os.path.isdir(os.path.join(args.pundir, 'share/pun/parameters')) or len(os.listdir(os.path.join(args.pundir, 'share/pun/parameters'))) == 0:
        error('\'{}\' is not a valid pun installation directory'.format(args.pundir))

    # ensure that the punHOME is empty
    print(os.path.join(args.punhome, 'parameters'))
    if os.path.isdir(args.punhome) and len(os.listdir(args.punhome)) > 0:
        error('\'{}\' is not an empty directory'.format(args.punhome))
    elif not os.path.exists(args.punhome):
        os.makedirs(args.punhome)
        os.makedirs(os.path.join(args.punhome, 'parameters'))

    # copy all .yaml files from punDIR/parameters/ to punHOME/
    files = os.listdir(os.path.join(args.pundir, 'share/pun/parameters'))
    print('Copying the following files to the new pun home')
    for f in files:
        print('  {}'.format(f))
        copy2(os.path.join(args.pundir, 'share/pun/parameters/', f), os.path.join(args.punhome, 'parameters'))

    exit(0);

if __name__ == '__main__':
    main()
